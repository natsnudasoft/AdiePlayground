// <auto-generated />
namespace AdiePlayground.Data.Migrations
{
    using System.Data.Entity.Migrations;
    using System.Data.Entity.Migrations.Infrastructure;
    using Common;

    /// <summary>
    /// Initial migration.
    /// ======= Tables added =======
    /// dbo.UniversityCourse
    /// dbo.UniversityStudentCourseEnrolment
    /// dbo.UniversityStudent
    /// dbo.UniversityStudentAddress
    /// dbo.DegreeClassification
    /// dbo.IsoCountryCode
    /// </summary>
    /// <seealso cref="DbMigration" />
    /// <seealso cref="IMigrationMetadata" />
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public partial class Initial : DbMigration
    {
        /// <inheritdoc/>
        public override void Up()
        {
            CreateTable(
                "dbo.UniversityCourse",
                c => new
                {
                    Id = c.Int(nullable: false, identity: true),
                    RowVersion = c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"),
                    Title = c.String(nullable: false, maxLength: 255),
                    Credits = c.Int(nullable: false),
                })
                .PrimaryKey(t => t.Id);

            CreateTable(
                "dbo.UniversityStudentCourseEnrolment",
                c => new
                {
                    Id = c.Int(nullable: false, identity: true),
                    RowVersion = c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"),
                    StudentId = c.Int(nullable: false),
                    CourseId = c.Int(nullable: false),
                    PercentageGrade = c.Int(),
                })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.UniversityCourse", t => t.CourseId, cascadeDelete: true)
                .ForeignKey("dbo.UniversityStudent", t => t.StudentId, cascadeDelete: true)
                .Index(t => t.StudentId)
                .Index(t => t.CourseId);

            CreateTable(
                "dbo.UniversityStudent",
                c => new
                {
                    Id = c.Int(nullable: false, identity: true),
                    RowVersion = c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"),
                    Title = c.String(maxLength: 35),
                    FullName = c.String(nullable: false, maxLength: 255),
                    DateOfBirth = c.DateTime(nullable: false, storeType: "date"),
                    HomePhone = c.String(maxLength: 35),
                    EmailAddress = c.String(maxLength: 255),
                    EnrolmentDate = c.DateTime(nullable: false, storeType: "date"),
                    DegreeClassification = c.Int(nullable: false),
                })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.DegreeClassification", t => t.DegreeClassification);

            CreateTable(
                "dbo.UniversityStudentAddress",
                c => new
                {
                    Id = c.Int(nullable: false),
                    RowVersion = c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"),
                    AddressLine1 = c.String(nullable: false, maxLength: 60),
                    AddressLine2 = c.String(maxLength: 60),
                    City = c.String(nullable: false, maxLength: 60),
                    County = c.String(nullable: false, maxLength: 60),
                    PostalCode = c.String(nullable: false, maxLength: 35),
                    IsoCountryCode = c.String(nullable: false, maxLength: 2),
                })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.UniversityStudent", t => t.Id, cascadeDelete: true)
                .ForeignKey("dbo.IsoCountryCode", t => t.IsoCountryCode)
                .Index(t => t.Id);

            // Add and seed DegreeClassification lookup table. We also added Foreign Key constraint
            // to dbo.UniversityStudent above. Appropriate Down actions are also added.
            CreateTable(
                "dbo.DegreeClassification",
                c => new
                {
                    Id = c.Int(nullable: false),
                    Classification = c.String(maxLength: 255),
                    RowVersion = c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"),
                })
                .PrimaryKey(t => t.Id);

            Sql("INSERT [dbo].[DegreeClassification]([Id],[Classification]) VALUES (0,N'None'),(1,N'FirstClass'),(2,N'SecondClassUpper'),(3,N'SecondClassLower'),(4,N'ThirdClass'),(5,N'Pass'),(6,N'Fail')");

            // Add and seed ISO 3166 alpha-2 country code table. We also added Foreign key
            // constraint to dbo.StudentAddress above. Appropriate Down actions are also added.
            CreateTable(
                "dbo.IsoCountryCode",
                c => new
                {
                    IsoCountryCode = c.String(nullable: false, maxLength: 2),
                    IsoCountryName = c.String(maxLength: 255),
                    RowVersion = c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"),
                })
                .PrimaryKey(t => t.IsoCountryCode)
                .Index(t => t.IsoCountryName);

            foreach (var isoCountryCodeMapping in Iso3166Helper.CountryCodeMappings)
            {
                var value = isoCountryCodeMapping.Value.Replace("'", "''");
                Sql($"INSERT [dbo].[IsoCountryCode]([IsoCountryCode],[IsoCountryName]) VALUES ('{isoCountryCodeMapping.Key}','{value}')");
            }
        }

        /// <inheritdoc/>
        public override void Down()
        {
            DropForeignKey("dbo.UniversityStudent", "DegreeClassification", "dbo.DegreeClassification");
            DropTable("dbo.DegreeClassification");
            DropForeignKey("dbo.UniversityStudentAddress", "Id", "dbo.UniversityStudent");
            DropForeignKey("dbo.UniversityStudentCourseEnrolment", "StudentId", "dbo.UniversityStudent");
            DropForeignKey("dbo.UniversityStudentCourseEnrolment", "CourseId", "dbo.UniversityCourse");
            DropIndex("dbo.UniversityStudentCourseEnrolment", new[] { "CourseId" });
            DropIndex("dbo.UniversityStudentCourseEnrolment", new[] { "StudentId" });
            DropIndex("dbo.UniversityStudentAddress", new[] { "Id" });
            DropTable("dbo.UniversityCourse");
            DropTable("dbo.UniversityStudentCourseEnrolment");
            DropTable("dbo.UniversityStudent");
            DropForeignKey("dbo.UniversityStudentAddress", "IsoCountryCode", "dbo.IsoCountryCode");
            DropTable("dbo.IsoCountryCode");
            DropTable("dbo.UniversityStudentAddress");
        }
    }
}
